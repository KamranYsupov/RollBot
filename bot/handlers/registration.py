import loguru
from aiogram import Router, types, F
from aiogram.enums import ChatMemberStatus
from aiogram.filters import CommandStart, Command, StateFilter, or_f
from aiogram.fsm.context import FSMContext

from django.conf import settings

from bot.keyboards.reply import get_reply_contact_keyboard

router = Router()

@router.message(
    StateFilter('*'),
    F.text.lower() == '–æ—Ç–º–µ–Ω–∞ ‚ùå'
)
async def cancel_handler(
        message: types.Message,
        state: FSMContext,
):
    await message.answer('–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ')
    await state.clear()


@router.callback_query(F.data == 'check_subscription')
async def check_subscription_callback_handler(
        callback: types.CallbackQuery,
):
    chat_member = await callback.bot.get_chat_member(
        chat_id=settings.CHANNEL_ID,
        user_id=callback.from_user.id
    )
    member_statuses = (
            ChatMemberStatus.MEMBER,
            ChatMemberStatus.ADMINISTRATOR,
            ChatMemberStatus.CREATOR
    )
    if chat_member.status not in member_statuses:
        await callback.answer("–¢—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–ª—Å—è ‚ùå")
        return

    button_text = '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ üì≤'
    await callback.message.delete()
    await callback.message.answer(
        '–î–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏'
        f'–Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø—É <b><em>"{button_text}"</em></b>, —á—Ç–æ–±—ã –µ–≥–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å',
        reply_markup=get_reply_contact_keyboard(button_text),
        parse_mode='HTML',
    )

